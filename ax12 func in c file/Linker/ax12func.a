;#include "ax12func.h"
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;
;#ifndef RXB8
;#define RXB8 1
;#endif
;
;#ifndef TXB8
;#define TXB8 0
;#endif
;
;#ifndef UPE
;#define UPE 2
;#endif
;
;#ifndef DOR
;#define DOR 3
;#endif
;
;#ifndef FE
;#define FE 4
;#endif
;
;#ifndef UDRE
;#define UDRE 5
;#endif
;
;#ifndef RXC
;#define RXC 7
;
;#define TXC 6
;#endif
;
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<DOR)
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;
;unsigned char brzina_servo_H, brzina_servo_L, ugao_servo_H, ugao_servo_L, valLow, valHigh;
;unsigned char sum=0;
;unsigned char checksum=0;
;unsigned char greska;
;unsigned char IdServoGreska;
;char paket1, paket2, paket4, paket6, paket7;
;extern char moving, positionLow, positionHigh;
;
;void prijem_paketa (void)
; 0001 0032 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0033     paket1=getchar();
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0034     paket2=getchar();
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0035     IdServoGreska=getchar();
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 0036     paket4=getchar();
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 0037     greska=getchar();
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0038     paket6=getchar();
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 0039 }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;
;void prijem_paketaMoving(void)
; 0001 003C {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 003D     paket1=getchar();
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 003E     paket2=getchar();
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 003F     IdServoGreska=getchar();
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0040     paket4=getchar();
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0041     greska=getchar();
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0042     moving=getchar();
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0043     paket7=getchar();
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 0044 }
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;void prijem_paketaPosition(void)
; 0001 0047 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 0048     paket1=getchar();
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 0049     paket2=getchar();
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0001 004A     IdServoGreska=getchar();
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 004B     paket4=getchar();
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0001 004C     greska=getchar();
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 004D     positionLow=getchar();
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0001 004E 	positionHigh=getchar();
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 004F     paket7=getchar();
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0050 }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;
;void blokiranje_predaje(void)                        //funkcija koja blokira predaju u trenutku kada
; 0001 0053 {                                                      // posaljemo ceo paket
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0001 0054     while ( !( UCSR0A & (1<<TXC)) )   ;    //kada se posalje ceo paket onda se bit 6 registra UCSRA
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 0055     UCSR0B.3=0;                            // setuje na 1, potom se UCSRB.3 stavlja na 0, a to je bit koji
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0056     UCSR0A.6=1;                            //iskljuci TxD i taj pin pinovo postaje PD1, a on je inicijalizovan
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0057 }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;
;void oslobadjanje_predaje(void)                 //proizvodjaca mikrokontrolera (datasheet 148 strana)
; 0001 005A {
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 005B     UCSR0B.3=1;                            //TxD se opet ukljucuje tako sto se UCSRB.3 bit setuje
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 005C }
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;                                                 //proizvodjaca mikrokontrolera (datasheet 148 strana)
;void oslobadjanje_prijema(void)
; 0001 005F {
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0060     UCSR0B.4=1;                         // bit koji kontrolise oslobadjanje i blokiranje prijema
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 0061 }
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;
;void blokiranje_prijema(void)
; 0001 0064 {
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0001 0065     UCSR0B.4=0;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 0066 }
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;
;/*********************AX12 funkcije*********************/
;void ax12_goto(int ID, short pozicija1,short brzina1)
; 0001 006A {
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 006B     ugao_servo_H=(char)(pozicija1>>8);
;	ID -> Y+4
;	pozicija1 -> Y+2
;	brzina1 -> Y+0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0001 006C     ugao_servo_L=(char)(pozicija1&0x00FF);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0001 006D 
; 0001 006E     brzina_servo_H=(char)(brzina1>>8);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0001 006F     brzina_servo_L=(char)(brzina1&0x00FF);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0001 0070 
; 0001 0071     sum=0x28 + ID + brzina_servo_H + brzina_servo_L + ugao_servo_H + ugao_servo_L;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0001 0072     checksum=~sum;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0001 0073 
; 0001 0074     blokiranje_prijema();
;PCODE: $0000007B VOL: 0
; 0001 0075     oslobadjanje_predaje();
;PCODE: $0000007C VOL: 0
; 0001 0076 
; 0001 0077     putchar(0xff);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0001 0078     putchar(0xff);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0001 0079     putchar(ID);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0001 007A     putchar(0x07);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0001 007B     putchar(0x03);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0001 007C     putchar(0x1e);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0001 007D     putchar(ugao_servo_L);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0001 007E     putchar(ugao_servo_H);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0001 007F     putchar(brzina_servo_L);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0001 0080     putchar(brzina_servo_H);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0001 0081     putchar(checksum);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0001 0082 
; 0001 0083     blokiranje_predaje();
;PCODE: $0000009A VOL: 0
; 0001 0084     oslobadjanje_prijema();
;PCODE: $0000009B VOL: 0
; 0001 0085 
; 0001 0086     prijem_paketa();
;PCODE: $0000009C VOL: 0
; 0001 0087 
; 0001 0088     oslobadjanje_predaje();
;PCODE: $0000009D VOL: 0
; 0001 0089 }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;
;void ax12_moving_status(int ID) //slanje poruke za dobijanja stanja moving
; 0001 008C {
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0001 008D     sum = ID+0x04+0x02+0x2e+0x01;//suma iinfo=2xStart+ID+lenght+iw+add
;	ID -> Y+0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0001 008E     checksum=~sum;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0001 008F 
; 0001 0090     blokiranje_prijema();
;PCODE: $000000A9 VOL: 0
; 0001 0091     oslobadjanje_predaje();
;PCODE: $000000AA VOL: 0
; 0001 0092 
; 0001 0093     putchar(0xff);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0001 0094     putchar(0xff);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0001 0095     putchar(ID);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0001 0096     putchar(0x04);	//LENGTH
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0001 0097     putchar(0x02);	//INSTRUCTION READ
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0001 0098     putchar(0x2e);	//ADRESS
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0001 0099     putchar(0x01);	//LENGTH READ
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0001 009A     putchar(checksum);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0001 009B 
; 0001 009C     blokiranje_predaje();
;PCODE: $000000C3 VOL: 0
; 0001 009D     oslobadjanje_prijema();
;PCODE: $000000C4 VOL: 0
; 0001 009E 
; 0001 009F     prijem_paketaMoving();
;PCODE: $000000C5 VOL: 0
; 0001 00A0 
; 0001 00A1     oslobadjanje_predaje();
;PCODE: $000000C6 VOL: 0
; 0001 00A2 }
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;
;void ax12_position_status(int ID) //slanje poruke za dobijanja pozicije
; 0001 00A5 {
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0001 00A6     sum = ID+0x04+0x02+0x24+0x02;//suma iinfo=2xStart+ID+lenght+iw+add
;	ID -> Y+0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0001 00A7     checksum=~sum;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0001 00A8 
; 0001 00A9     blokiranje_prijema();
;PCODE: $000000D2 VOL: 0
; 0001 00AA     oslobadjanje_predaje();
;PCODE: $000000D3 VOL: 0
; 0001 00AB 
; 0001 00AC     putchar(0xff);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0001 00AD     putchar(0xff);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0001 00AE     putchar(ID);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0001 00AF     putchar(0x04); 	//LENGTH
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0001 00B0     putchar(0x02);	//INSTRUCTION READ
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0001 00B1     putchar(0x24);	//ADRESS
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0001 00B2     putchar(0x02);	//LENGTH READ
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0001 00B3     putchar(checksum);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0001 00B4 
; 0001 00B5     blokiranje_predaje();
;PCODE: $000000EC VOL: 0
; 0001 00B6     oslobadjanje_prijema();
;PCODE: $000000ED VOL: 0
; 0001 00B7 
; 0001 00B8     prijem_paketaPosition();
;PCODE: $000000EE VOL: 0
; 0001 00B9 
; 0001 00BA     oslobadjanje_predaje();
;PCODE: $000000EF VOL: 0
; 0001 00BB }
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;void ax12_alarm_shutdown(int ID)
; 0001 00BD {
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0001 00BE     sum=ID+0x04+0x03+0x12+0x24;
;	ID -> Y+0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0001 00BF     checksum=~sum;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0001 00C0 
; 0001 00C1     blokiranje_prijema();
;PCODE: $000000FB VOL: 0
; 0001 00C2     oslobadjanje_predaje();
;PCODE: $000000FC VOL: 0
; 0001 00C3 
; 0001 00C4     putchar(0xff);  //START
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0001 00C5     putchar(0xff);  //START
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0001 00C6     putchar(ID);  //ID
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0001 00C7     putchar(0x04);  //LENGTH
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0001 00C8     putchar(0x03);  ///WRITE
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0001 00C9     putchar(0x12);  //ADRESS
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0001 00CA     putchar(0x24);  //VALUE
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0001 00CB 	putchar(checksum); //CHECKSUM
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0001 00CC }
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;void ax12_torque_enable(int ID)	//ukljucuje moment
; 0001 00CE {
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0001 00CF 
; 0001 00D0     sum=0x01+0x05+0x03+0x18+0x01+0x00;
;	ID -> Y+0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0001 00D1     checksum=~sum;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0001 00D2 
; 0001 00D3     blokiranje_prijema();
;PCODE: $0000011F VOL: 0
; 0001 00D4     oslobadjanje_predaje();
;PCODE: $00000120 VOL: 0
; 0001 00D5 
; 0001 00D6     putchar(0xff);  //START
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0001 00D7     putchar(0xff);  //START
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0001 00D8     putchar(ID);    //ID
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0001 00D9     putchar(0x05);  //LENGTH
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0001 00DA     putchar(0x03);  ///WRITE
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0001 00DB     putchar(0x18);  //ADRESS
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0001 00DC     putchar(0x01);  //VALUE
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0001 00DD     putchar(0x00);  //VALUE
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0001 00DE     putchar(checksum); //CHECKSUM
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0001 00DF 
; 0001 00E0 	blokiranje_predaje();
;PCODE: $0000013C VOL: 0
; 0001 00E1     oslobadjanje_prijema();
;PCODE: $0000013D VOL: 0
; 0001 00E2 
; 0001 00E3     prijem_paketa();
;PCODE: $0000013E VOL: 0
; 0001 00E4 
; 0001 00E5     oslobadjanje_predaje();
;PCODE: $0000013F VOL: 0
; 0001 00E6 }
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;void ax12_torque_limit(int ID, int value) //podesavanje maksimalnog momenta
; 0001 00E8 {
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0001 00E9 	valHigh=(char)(value>>8);
;	ID -> Y+2
;	value -> Y+0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0001 00EA     valLow=(char)(value&0x00FF);
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0001 00EB 
; 0001 00EC     sum=ID+0x05+0x03+0x22+valLow+valHigh;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0001 00ED     checksum=~sum;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0001 00EE 
; 0001 00EF 	blokiranje_prijema();
;PCODE: $00000153 VOL: 0
; 0001 00F0     oslobadjanje_predaje();
;PCODE: $00000154 VOL: 0
; 0001 00F1 
; 0001 00F2     putchar(0xff);  //START
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0001 00F3     putchar(0xff);  //START
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0001 00F4     putchar(ID);  	//ID
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0001 00F5     putchar(0x05);  //LENGTH
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0001 00F6     putchar(0x03);  ///WRITE
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0001 00F7     putchar(0x22);  //ADRESS
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0001 00F8     putchar(valLow);  //VALUE
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0001 00F9     putchar(valHigh);  //VALUE
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0001 00FA     putchar(checksum);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0001 00FB 
; 0001 00FC 	blokiranje_predaje();
;PCODE: $0000016E VOL: 0
; 0001 00FD     oslobadjanje_prijema();
;PCODE: $0000016F VOL: 0
; 0001 00FE 
; 0001 00FF     prijem_paketa();
;PCODE: $00000170 VOL: 0
; 0001 0100 
; 0001 0101     oslobadjanje_predaje();
;PCODE: $00000171 VOL: 0
; 0001 0102 
; 0001 0103 
; 0001 0104 }
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;void ax12_id_set(int ID)	//podesavanje IDa servoa
; 0001 0106 {
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0001 0107      char sum, checksum;
; 0001 0108      sum=0xfe+0x04+0x03+0x03+ID;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;	ID -> Y+2
;	sum -> R17
;	checksum -> R16
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0001 0109      checksum=~sum;
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0001 010A 
; 0001 010B      putchar(0xff);  //START
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0001 010C      putchar(0xff);  //START
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0001 010D      putchar(0xfe);  //ID
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0001 010E      putchar(0x04);  //LENGTH
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0001 010F      putchar(0x03);  ///WRITE
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0001 0110      putchar(0x03);  //ADRESS
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0001 0111      putchar(ID);  //VALUE
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0001 0112      putchar(checksum); //CHECKSUM
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0001 0113 
; 0001 0114 	blokiranje_predaje();
;PCODE: $00000196 VOL: 0
; 0001 0115     oslobadjanje_prijema();
;PCODE: $00000197 VOL: 0
; 0001 0116 
; 0001 0117     prijem_paketa();
;PCODE: $00000198 VOL: 0
; 0001 0118 
; 0001 0119     oslobadjanje_predaje();
;PCODE: $00000199 VOL: 0
; 0001 011A }
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;void ax12_reset(int ID) //reset na fabricko podesavanje
; 0001 011C {
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0001 011D     sum=ID+0x02+0x06;
;	ID -> Y+0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0001 011E     checksum=~sum;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0001 011F 
; 0001 0120 
; 0001 0121     blokiranje_prijema();
;PCODE: $000001A9 VOL: 0
; 0001 0122     oslobadjanje_predaje();
;PCODE: $000001AA VOL: 0
; 0001 0123 
; 0001 0124     putchar(0xff);  //START
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0001 0125     putchar(0xff);  //START
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0001 0126     putchar(ID);  	//ID
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0001 0127     putchar(0x02);  //LENGTH
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0001 0128     putchar(0x06);  //reset
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0001 0129     putchar(checksum); //CHECKSUM
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0001 012A 
; 0001 012B }
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
